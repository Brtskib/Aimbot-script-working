local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local workspace = game:GetService("Workspace")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

local aimAssistEnabled = false
local maxScreenDistance = 150

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "AimAssistGUI"
gui.ResetOnSpawn = false
gui.Parent = localPlayer:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 130, 0, 50)
button.Position = UDim2.new(0, 10, 0, 10)
button.Text = "Aim Assist: OFF"
button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18
button.Parent = gui

button.MouseButton1Click:Connect(function()
	aimAssistEnabled = not aimAssistEnabled
	button.Text = "Aim Assist: " .. (aimAssistEnabled and "ON" or "OFF")
	button.BackgroundColor3 = aimAssistEnabled and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
end)

-- Function to check line of sight
local function hasLineOfSight(targetPart)
	local origin = camera.CFrame.Position
	local direction = (targetPart.Position - origin).Unit * (targetPart.Position - origin).Magnitude

	local params = RaycastParams.new()
	params.FilterDescendantsInstances = {localPlayer.Character}
	params.FilterType = Enum.RaycastFilterType.Blacklist

	local result = workspace:Raycast(origin, direction, params)

	-- If nothing hit or the hit is part of the target, it's visible
	return (not result) or (result.Instance:IsDescendantOf(targetPart.Parent))
end

-- Get closest visible player
local function getClosestPlayer()
	local closestPart = nil
	local shortestDistance = maxScreenDistance

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= localPlayer then
			local character = player.Character
			local hrp = character and character:FindFirstChild("HumanoidRootPart")
			local humanoid = character and character:FindFirstChildOfClass("Humanoid")

			if humanoid and humanoid.Health > 0 and hrp then
				local screenPoint, onScreen = camera:WorldToViewportPoint(hrp.Position)

				if onScreen then
					local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
					local dist = (Vector2.new(screenPoint.X, screenPoint.Y) - screenCenter).Magnitude

					if dist < shortestDistance and hasLineOfSight(hrp) then
						shortestDistance = dist
						closestPart = hrp
					end
				end
			end
		end
	end

	return closestPart
end

-- Lock-on update
RunService.RenderStepped:Connect(function()
	if aimAssistEnabled then
		local targetPart = getClosestPlayer()
		if targetPart and targetPart:IsDescendantOf(workspace) then
			local camPosition = camera.CFrame.Position
			camera.CFrame = CFrame.new(camPosition, targetPart.Position)
		end
	end
end)
